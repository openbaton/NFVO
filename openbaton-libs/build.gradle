/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id 'net.researchgate.release' version '2.1.2'
    id "com.github.sherter.google-java-format" version "0.5"
}

apply from: 'gradle/gradle/git.release.gradle'
apply from: 'gradle/gradle/nexus.upload.plugin.gradle'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.7

apply from: 'gradle/gradle/helpers.gradle'

apply from: 'gradle/gradle/command.line.helper.gradle'
apply from: 'gradle/gradle/git.helpers.gradle'

project.ext {
    //------------------------------------------------//
    /**
     * Spring Related Variables
     */
    springVersion = '4.2.0.RELEASE'
    springBootVersion = '1.2.5.RELEASE'
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * Application Related Version
     */
    applicationVersion = "0.6-alpha"
    applicationVersionDebian = "1";

    //------------------------------------------------//
}

apply from: 'gradle/gradle/application.java.gradle'

repositories {
    mavenCentral()
    mavenLocal()
}

allprojects {

    sourceSets {
        main {
            java      { srcDir 'src/main/java'}
            resources { srcDir 'src/main/resources'}
        }

        test {
            java      { srcDir 'src/test/java'}
            resources { srcDir 'src/test/resources'}
        }

        integration {
            java      { srcDir 'src/test/integration/java' }
            resources { srcDir 'src/test/resources'}
            compileClasspath += sourceSets.test.compileClasspath
            runtimeClasspath += sourceSets.test.runtimeClasspath
            output.classesDir = sourceSets.test.output.classesDir
        }

    }

    dependencies {
        integrationCompile sourceSets.test.output
    }
}

compileJava.dependsOn tasks.googleJavaFormat

javadoc {
	source = sourceSets.main.allJava
	classpath = configurations.compile
}
